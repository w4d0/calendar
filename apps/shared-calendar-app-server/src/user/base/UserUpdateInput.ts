/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CalendarIntegrationUpdateManyWithoutUsersInput } from "./CalendarIntegrationUpdateManyWithoutUsersInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { MeetingUpdateManyWithoutUsersInput } from "./MeetingUpdateManyWithoutUsersInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { TeamMemberUpdateManyWithoutUsersInput } from "./TeamMemberUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CalendarIntegrationUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => CalendarIntegrationUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => CalendarIntegrationUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  calendarIntegrations?: CalendarIntegrationUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => MeetingUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => MeetingUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => MeetingUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  meetings?: MeetingUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => TeamMemberUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TeamMemberUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TeamMemberUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  teamMembers?: TeamMemberUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;
}

export { UserUpdateInput as UserUpdateInput };
